{"ast":null,"code":"var _class;\nimport { Todo } from '../../Todo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../todo-item/todo-item.component\";\nimport * as i3 from \"../add-todo/add-todo.component\";\nfunction TodosComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"No Todos To Display!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TodosComponent_ng_template_7_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-todo-item\", 6);\n    i0.ɵɵlistener(\"todoDelete\", function TodosComponent_ng_template_7_div_0_Template_app_todo_item_todoDelete_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.deleteTodo($event));\n    })(\"todoCheckbox\", function TodosComponent_ng_template_7_div_0_Template_app_todo_item_todoCheckbox_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.toggleTodo($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const todo_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"todo\", todo_r4)(\"i\", i_r5);\n  }\n}\nfunction TodosComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TodosComponent_ng_template_7_div_0_Template, 2, 2, \"div\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.todos);\n  }\n}\nexport class TodosComponent {\n  constructor() {\n    this.localItem = localStorage.getItem('todos');\n    if (this.localItem == null) {\n      this.todos = [];\n    } else {\n      this.todos = JSON.parse(this.localItem);\n    }\n  }\n  ngOnInit() {}\n  deleteTodo(todo) {\n    console.log(todo);\n    const index = this.todos.indexOf(todo);\n    this.todos.splice(index, 1);\n    localStorage.setItem('todos', JSON.stringify(this.todos));\n  }\n  addTodo(todo) {\n    if (newTodo.trim() !== '') {\n      // Check if the newTodo is not empty after trimming whitespace\n      const todo = {\n        text: newTodo,\n        completed: false\n      };\n      this.todos.push(todo);\n      console.log('todos', this.todos);\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n      console.log('todos Localstorage', localStorage.getItem('todos'));\n    }\n    toggleTodo(todo, Todo);\n    {\n      const index = this.todos.indexOf(todo);\n      this.todos[index].active = !this.todos[index].active;\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }\n}\n_class = TodosComponent;\n_class.ɵfac = function TodosComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-todos\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"text-centre\", \"mb-3\"], [3, \"todoAdd\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"todo\", \"i\", \"todoDelete\", \"todoCheckbox\"]],\n  template: function TodosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Todo List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"app-add-todo\", 2);\n      i0.ɵɵlistener(\"todoAdd\", function TodosComponent_Template_app_add_todo_todoAdd_3_listener($event) {\n        return ctx.addTodo($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"h4\");\n      i0.ɵɵtext(5, \"Your Todos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, TodosComponent_div_6_Template, 2, 0, \"div\", 3);\n      i0.ɵɵtemplate(7, TodosComponent_ng_template_7_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(8);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.todos.length === 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.TodoItemComponent, i3.AddTodoComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Todo","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TodosComponent_ng_template_7_div_0_Template_app_todo_item_todoDelete_1_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","deleteTodo","TodosComponent_ng_template_7_div_0_Template_app_todo_item_todoCheckbox_1_listener","ctx_r8","toggleTodo","ɵɵadvance","ɵɵproperty","todo_r4","i_r5","ɵɵtemplate","TodosComponent_ng_template_7_div_0_Template","ctx_r2","todos","TodosComponent","constructor","localItem","localStorage","getItem","JSON","parse","ngOnInit","todo","console","log","index","indexOf","splice","setItem","stringify","addTodo","newTodo","trim","text","completed","push","active","selectors","decls","vars","consts","template","TodosComponent_Template","rf","ctx","TodosComponent_Template_app_add_todo_todoAdd_3_listener","TodosComponent_div_6_Template","TodosComponent_ng_template_7_Template","ɵɵtemplateRefExtractor","length","_r1"],"sources":["C:\\Users\\ppp\\Desktop\\Angular cwh\\cwh-todo-list\\src\\app\\myComponent\\todos\\todos.component.ts","C:\\Users\\ppp\\Desktop\\Angular cwh\\cwh-todo-list\\src\\app\\myComponent\\todos\\todos.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Todo } from '../../Todo';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css'],\n})\nexport class TodosComponent implements OnInit {\n  localItem!: any;\n  todos: Todo[];\n  constructor() {\n    this.localItem = localStorage.getItem('todos');\n    if (this.localItem == null) {\n      this.todos = [];\n    } else {\n      this.todos = JSON.parse(this.localItem);\n    }\n  }\n  ngOnInit(): void {}\n  deleteTodo(todo: Todo) {\n    console.log(todo);\n    const index = this.todos.indexOf(todo);\n    this.todos.splice(index, 1);\n    localStorage.setItem('todos', JSON.stringify(this.todos));\n  }\n  addTodo(todo: Todo) {\n    if (newTodo.trim() !== '') { // Check if the newTodo is not empty after trimming whitespace\n      const todo: Todo = { text: newTodo, completed: false };\n    this.todos.push(todo);\n    console.log('todos', this.todos);\n    localStorage.setItem('todos', JSON.stringify(this.todos));\n    console.log('todos Localstorage', localStorage.getItem('todos'));\n  }\n  toggleTodo(todo: Todo) {\n    const index = this.todos.indexOf(todo);\n    this.todos[index].active = !this.todos[index].active;\n    localStorage.setItem('todos', JSON.stringify(this.todos));\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"text-centre mb-3\">Todo List</h1>\n<app-add-todo (todoAdd)=\"addTodo($event)\"></app-add-todo>\n<h4>Your Todos</h4>\n<div *ngIf=\"this.todos.length === 0; else elseBlock\">No Todos To Display!</div>\n<ng-template #elseBlock>\n  <div *ngFor=\"let todo of todos; index as i\">\n    <app-todo-item\n      [todo]=\"todo\"\n      [i]=\"i\"\n      (todoDelete)=\"deleteTodo($event)\"\n      (todoCheckbox)=\"toggleTodo($event)\"\n    ></app-todo-item>\n  </div>\n</ng-template>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}